// Top-level build file where you can add configuration options common to all sub-projects/modules.

ext {
    // NOTE: xxx.yy.zz; -SNAPSHOT; -RCxx
    VERSION_NAME = "0.3.4"
    SDK_VERSION = 28
    MIN_SDK_VERSION = 19
    BUILD_TOOL_VERSION = '28.0.3'

    multidexVersion = '1.0.3'
    supportLibraryVersion = '28.0.0'
    constraintLayoutVersion = '1.1.3'
    junitVersion = '4.12'
    espressoVersion = '3.0.2'
    testVersion = '1.0.2'
    guavaVersion = '26.0'
    daggerVersion = '2.17'
    jsr250ApiVersion = '1.0'
    mockitoVersion = '2.9.0'
    dexmakerVersion = '2.19.1'
    powermockVersion = '1.7.4'
    rxjavaVersion = '2.2.0'
    rxandroidVersion = '2.1.0'
    nextcloudLibraryVersion = '1.4.2'
    uiAutomatorVersion = '2.1.3'
    jsoupVersion = '1.11.3'
    stethoVersion = '1.5.0'
    slf4jVersion = '1.7.25'
    // Resolve conflicts
    findbugsJsr305Version = '3.0.2'
}

ext {
    buildVersionCode = {
        // versionCode MAX: 2 100 000 000
        // Release: xxx.yy.zz.99
        // -SNAPSHOT: *.00
        // -RCxx: *.(1-98)
        def candidate = "99"
        def (major, minor, patch) = VERSION_NAME.toLowerCase().replaceAll('-', '').tokenize('.')
        if (patch.endsWith("snapshot")) {
            candidate = "0"
            patch = patch.replaceAll("[^0-9]", "");
        } else {
            def rc
            (patch, rc) = patch.tokenize("rc")
            if (rc) {
                candidate = rc
            }
        }
        (major, minor, patch, candidate) = [major, minor, patch, candidate].collect{it.toInteger()}
        (major * 1000000) + (minor * 10000) + (patch * 100) + candidate
    }
}

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        // https://jitpack.io/docs/BUILDING/#gradle-projects
        // https://jitpack.io/com/github/USER/REPO/TAG/build.log
        maven { url 'https://jitpack.io' }
    }
    /*gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }*/
}
task clean(type: Delete) {
    delete rootProject.buildDir
}
