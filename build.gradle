// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.9.23'
    ext.core_ktx_version = '1.10.1'
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.12.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id('com.android.application') version '8.12.0' apply false
    id('org.jetbrains.kotlin.android') version '2.0.21' apply false
    id('com.google.dagger.hilt.android') version '2.57' apply false
}

ext {
    // NOTE: xxx.yy.zz; -SNAPSHOT; -RCxx
    VERSION_NAME = '0.3.8'
    SDK_VERSION = 35
    MIN_SDK_VERSION = 21
    BUILD_TOOL_VERSION = '35.0.0'
}

ext {
    buildVersionCode = {
        // versionCode MAX: 2 100 000 000
        // Release: xxx.yy.zz.99
        // -SNAPSHOT: *.00
        // -RCxx: *.(1-98)
        def candidate = '99'
        def (major, minor, patch) = VERSION_NAME.toLowerCase().replaceAll('-', '').tokenize('.')
        if (patch.endsWith("snapshot")) {
            candidate = '0'
            patch = patch.replaceAll('[^0-9]', '')
        } else {
            def rc
            (patch, rc) = patch.tokenize('rc')
            if (rc) {
                candidate = rc
            }
        }
        (major, minor, patch, candidate) = [major, minor, patch, candidate].collect{it.toInteger()}
        (major * 1000000) + (minor * 10000) + (patch * 100) + candidate
    }
}

allprojects {
    // gradle.projectsEvaluated {
    //     tasks.withType(JavaCompile) {
    //         options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    //     }
    // }
}

task clean(type: Delete) {
    delete rootProject.layout.buildDirectory
}
